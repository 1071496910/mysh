// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UploadRequest struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Record               string   `protobuf:"bytes,2,opt,name=record,proto3" json:"record,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	CliAddr              string   `protobuf:"bytes,4,opt,name=cliAddr,proto3" json:"cliAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadRequest) Reset()         { *m = UploadRequest{} }
func (m *UploadRequest) String() string { return proto.CompactTextString(m) }
func (*UploadRequest) ProtoMessage()    {}
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{0}
}

func (m *UploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadRequest.Unmarshal(m, b)
}
func (m *UploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadRequest.Marshal(b, m, deterministic)
}
func (m *UploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadRequest.Merge(m, src)
}
func (m *UploadRequest) XXX_Size() int {
	return xxx_messageInfo_UploadRequest.Size(m)
}
func (m *UploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadRequest proto.InternalMessageInfo

func (m *UploadRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *UploadRequest) GetRecord() string {
	if m != nil {
		return m.Record
	}
	return ""
}

func (m *UploadRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *UploadRequest) GetCliAddr() string {
	if m != nil {
		return m.CliAddr
	}
	return ""
}

type UploadResponse struct {
	ErrorMsg             string   `protobuf:"bytes,1,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	ResponseCode         int32    `protobuf:"varint,2,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadResponse) Reset()         { *m = UploadResponse{} }
func (m *UploadResponse) String() string { return proto.CompactTextString(m) }
func (*UploadResponse) ProtoMessage()    {}
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{1}
}

func (m *UploadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadResponse.Unmarshal(m, b)
}
func (m *UploadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadResponse.Marshal(b, m, deterministic)
}
func (m *UploadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadResponse.Merge(m, src)
}
func (m *UploadResponse) XXX_Size() int {
	return xxx_messageInfo_UploadResponse.Size(m)
}
func (m *UploadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadResponse proto.InternalMessageInfo

func (m *UploadResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *UploadResponse) GetResponseCode() int32 {
	if m != nil {
		return m.ResponseCode
	}
	return 0
}

type SearchRequest struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	SearchString         string   `protobuf:"bytes,2,opt,name=searchString,proto3" json:"searchString,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	CliAddr              string   `protobuf:"bytes,4,opt,name=cliAddr,proto3" json:"cliAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{2}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *SearchRequest) GetSearchString() string {
	if m != nil {
		return m.SearchString
	}
	return ""
}

func (m *SearchRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SearchRequest) GetCliAddr() string {
	if m != nil {
		return m.CliAddr
	}
	return ""
}

type SearchResponse struct {
	Response             []string `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
	ResponseCode         int32    `protobuf:"varint,2,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{3}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetResponse() []string {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *SearchResponse) GetResponseCode() int32 {
	if m != nil {
		return m.ResponseCode
	}
	return 0
}

type LoginRequest struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	CliAddr              string   `protobuf:"bytes,3,opt,name=cliAddr,proto3" json:"cliAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{4}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *LoginRequest) GetCliAddr() string {
	if m != nil {
		return m.CliAddr
	}
	return ""
}

type LoginResponse struct {
	ResponseCode         int32    `protobuf:"varint,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{5}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetResponseCode() int32 {
	if m != nil {
		return m.ResponseCode
	}
	return 0
}

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type LogoutRequest struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CliAddr              string   `protobuf:"bytes,2,opt,name=cliAddr,proto3" json:"cliAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutRequest) Reset()         { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()    {}
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{6}
}

func (m *LogoutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutRequest.Unmarshal(m, b)
}
func (m *LogoutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutRequest.Marshal(b, m, deterministic)
}
func (m *LogoutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutRequest.Merge(m, src)
}
func (m *LogoutRequest) XXX_Size() int {
	return xxx_messageInfo_LogoutRequest.Size(m)
}
func (m *LogoutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutRequest proto.InternalMessageInfo

func (m *LogoutRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *LogoutRequest) GetCliAddr() string {
	if m != nil {
		return m.CliAddr
	}
	return ""
}

type LogoutResponse struct {
	ResponseCode         int32    `protobuf:"varint,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutResponse) Reset()         { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()    {}
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{7}
}

func (m *LogoutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutResponse.Unmarshal(m, b)
}
func (m *LogoutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutResponse.Marshal(b, m, deterministic)
}
func (m *LogoutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutResponse.Merge(m, src)
}
func (m *LogoutResponse) XXX_Size() int {
	return xxx_messageInfo_LogoutResponse.Size(m)
}
func (m *LogoutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutResponse proto.InternalMessageInfo

func (m *LogoutResponse) GetResponseCode() int32 {
	if m != nil {
		return m.ResponseCode
	}
	return 0
}

type CleanRequest struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanRequest) Reset()         { *m = CleanRequest{} }
func (m *CleanRequest) String() string { return proto.CompactTextString(m) }
func (*CleanRequest) ProtoMessage()    {}
func (*CleanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{8}
}

func (m *CleanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanRequest.Unmarshal(m, b)
}
func (m *CleanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanRequest.Marshal(b, m, deterministic)
}
func (m *CleanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanRequest.Merge(m, src)
}
func (m *CleanRequest) XXX_Size() int {
	return xxx_messageInfo_CleanRequest.Size(m)
}
func (m *CleanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CleanRequest proto.InternalMessageInfo

func (m *CleanRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type CleanResponse struct {
	ResponseCode         int32    `protobuf:"varint,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanResponse) Reset()         { *m = CleanResponse{} }
func (m *CleanResponse) String() string { return proto.CompactTextString(m) }
func (*CleanResponse) ProtoMessage()    {}
func (*CleanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{9}
}

func (m *CleanResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanResponse.Unmarshal(m, b)
}
func (m *CleanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanResponse.Marshal(b, m, deterministic)
}
func (m *CleanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanResponse.Merge(m, src)
}
func (m *CleanResponse) XXX_Size() int {
	return xxx_messageInfo_CleanResponse.Size(m)
}
func (m *CleanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CleanResponse proto.InternalMessageInfo

func (m *CleanResponse) GetResponseCode() int32 {
	if m != nil {
		return m.ResponseCode
	}
	return 0
}

type UidLogoutRequest struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UidLogoutRequest) Reset()         { *m = UidLogoutRequest{} }
func (m *UidLogoutRequest) String() string { return proto.CompactTextString(m) }
func (*UidLogoutRequest) ProtoMessage()    {}
func (*UidLogoutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{10}
}

func (m *UidLogoutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UidLogoutRequest.Unmarshal(m, b)
}
func (m *UidLogoutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UidLogoutRequest.Marshal(b, m, deterministic)
}
func (m *UidLogoutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UidLogoutRequest.Merge(m, src)
}
func (m *UidLogoutRequest) XXX_Size() int {
	return xxx_messageInfo_UidLogoutRequest.Size(m)
}
func (m *UidLogoutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UidLogoutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UidLogoutRequest proto.InternalMessageInfo

func (m *UidLogoutRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type UidLogoutResponse struct {
	ResponseCode         int32    `protobuf:"varint,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UidLogoutResponse) Reset()         { *m = UidLogoutResponse{} }
func (m *UidLogoutResponse) String() string { return proto.CompactTextString(m) }
func (*UidLogoutResponse) ProtoMessage()    {}
func (*UidLogoutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{11}
}

func (m *UidLogoutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UidLogoutResponse.Unmarshal(m, b)
}
func (m *UidLogoutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UidLogoutResponse.Marshal(b, m, deterministic)
}
func (m *UidLogoutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UidLogoutResponse.Merge(m, src)
}
func (m *UidLogoutResponse) XXX_Size() int {
	return xxx_messageInfo_UidLogoutResponse.Size(m)
}
func (m *UidLogoutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UidLogoutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UidLogoutResponse proto.InternalMessageInfo

func (m *UidLogoutResponse) GetResponseCode() int32 {
	if m != nil {
		return m.ResponseCode
	}
	return 0
}

type CertRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertRequest) Reset()         { *m = CertRequest{} }
func (m *CertRequest) String() string { return proto.CompactTextString(m) }
func (*CertRequest) ProtoMessage()    {}
func (*CertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{12}
}

func (m *CertRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertRequest.Unmarshal(m, b)
}
func (m *CertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertRequest.Marshal(b, m, deterministic)
}
func (m *CertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertRequest.Merge(m, src)
}
func (m *CertRequest) XXX_Size() int {
	return xxx_messageInfo_CertRequest.Size(m)
}
func (m *CertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CertRequest proto.InternalMessageInfo

type CertEntry struct {
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertEntry) Reset()         { *m = CertEntry{} }
func (m *CertEntry) String() string { return proto.CompactTextString(m) }
func (*CertEntry) ProtoMessage()    {}
func (*CertEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{13}
}

func (m *CertEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertEntry.Unmarshal(m, b)
}
func (m *CertEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertEntry.Marshal(b, m, deterministic)
}
func (m *CertEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertEntry.Merge(m, src)
}
func (m *CertEntry) XXX_Size() int {
	return xxx_messageInfo_CertEntry.Size(m)
}
func (m *CertEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_CertEntry.DiscardUnknown(m)
}

var xxx_messageInfo_CertEntry proto.InternalMessageInfo

func (m *CertEntry) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type CommonQueryRequest struct {
	Req                  string   `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonQueryRequest) Reset()         { *m = CommonQueryRequest{} }
func (m *CommonQueryRequest) String() string { return proto.CompactTextString(m) }
func (*CommonQueryRequest) ProtoMessage()    {}
func (*CommonQueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{14}
}

func (m *CommonQueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonQueryRequest.Unmarshal(m, b)
}
func (m *CommonQueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonQueryRequest.Marshal(b, m, deterministic)
}
func (m *CommonQueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonQueryRequest.Merge(m, src)
}
func (m *CommonQueryRequest) XXX_Size() int {
	return xxx_messageInfo_CommonQueryRequest.Size(m)
}
func (m *CommonQueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonQueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonQueryRequest proto.InternalMessageInfo

func (m *CommonQueryRequest) GetReq() string {
	if m != nil {
		return m.Req
	}
	return ""
}

type CommonQueryResponse struct {
	Resp                 string   `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonQueryResponse) Reset()         { *m = CommonQueryResponse{} }
func (m *CommonQueryResponse) String() string { return proto.CompactTextString(m) }
func (*CommonQueryResponse) ProtoMessage()    {}
func (*CommonQueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{15}
}

func (m *CommonQueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonQueryResponse.Unmarshal(m, b)
}
func (m *CommonQueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonQueryResponse.Marshal(b, m, deterministic)
}
func (m *CommonQueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonQueryResponse.Merge(m, src)
}
func (m *CommonQueryResponse) XXX_Size() int {
	return xxx_messageInfo_CommonQueryResponse.Size(m)
}
func (m *CommonQueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonQueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonQueryResponse proto.InternalMessageInfo

func (m *CommonQueryResponse) GetResp() string {
	if m != nil {
		return m.Resp
	}
	return ""
}

type CommonQueryListResponse struct {
	Resp                 []string `protobuf:"bytes,1,rep,name=resp,proto3" json:"resp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonQueryListResponse) Reset()         { *m = CommonQueryListResponse{} }
func (m *CommonQueryListResponse) String() string { return proto.CompactTextString(m) }
func (*CommonQueryListResponse) ProtoMessage()    {}
func (*CommonQueryListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{16}
}

func (m *CommonQueryListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonQueryListResponse.Unmarshal(m, b)
}
func (m *CommonQueryListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonQueryListResponse.Marshal(b, m, deterministic)
}
func (m *CommonQueryListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonQueryListResponse.Merge(m, src)
}
func (m *CommonQueryListResponse) XXX_Size() int {
	return xxx_messageInfo_CommonQueryListResponse.Size(m)
}
func (m *CommonQueryListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonQueryListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonQueryListResponse proto.InternalMessageInfo

func (m *CommonQueryListResponse) GetResp() []string {
	if m != nil {
		return m.Resp
	}
	return nil
}

func init() {
	proto.RegisterType((*UploadRequest)(nil), "UploadRequest")
	proto.RegisterType((*UploadResponse)(nil), "UploadResponse")
	proto.RegisterType((*SearchRequest)(nil), "SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "SearchResponse")
	proto.RegisterType((*LoginRequest)(nil), "LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "LoginResponse")
	proto.RegisterType((*LogoutRequest)(nil), "LogoutRequest")
	proto.RegisterType((*LogoutResponse)(nil), "LogoutResponse")
	proto.RegisterType((*CleanRequest)(nil), "CleanRequest")
	proto.RegisterType((*CleanResponse)(nil), "CleanResponse")
	proto.RegisterType((*UidLogoutRequest)(nil), "UidLogoutRequest")
	proto.RegisterType((*UidLogoutResponse)(nil), "UidLogoutResponse")
	proto.RegisterType((*CertRequest)(nil), "CertRequest")
	proto.RegisterType((*CertEntry)(nil), "CertEntry")
	proto.RegisterType((*CommonQueryRequest)(nil), "CommonQueryRequest")
	proto.RegisterType((*CommonQueryResponse)(nil), "CommonQueryResponse")
	proto.RegisterType((*CommonQueryListResponse)(nil), "CommonQueryListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SearchServiceClient is the client API for SearchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SearchServiceClient interface {
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	Upload(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*UploadResponse, error)
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error)
}

type searchServiceClient struct {
	cc *grpc.ClientConn
}

func NewSearchServiceClient(cc *grpc.ClientConn) SearchServiceClient {
	return &searchServiceClient{cc}
}

func (c *searchServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/SearchService/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) Upload(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*UploadResponse, error) {
	out := new(UploadResponse)
	err := c.cc.Invoke(ctx, "/SearchService/Upload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/SearchService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error) {
	out := new(LogoutResponse)
	err := c.cc.Invoke(ctx, "/SearchService/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SearchServiceServer is the server API for SearchService service.
type SearchServiceServer interface {
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	Upload(context.Context, *UploadRequest) (*UploadResponse, error)
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	Logout(context.Context, *LogoutRequest) (*LogoutResponse, error)
}

func RegisterSearchServiceServer(s *grpc.Server, srv SearchServiceServer) {
	s.RegisterService(&_SearchService_serviceDesc, srv)
}

func _SearchService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_Upload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).Upload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/Upload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).Upload(ctx, req.(*UploadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).Logout(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SearchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "SearchService",
	HandlerType: (*SearchServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _SearchService_Search_Handler,
		},
		{
			MethodName: "Upload",
			Handler:    _SearchService_Upload_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _SearchService_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _SearchService_Logout_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto.proto",
}

// ProxyControllerClient is the client API for ProxyController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyControllerClient interface {
	CleanUidCache(ctx context.Context, in *CleanRequest, opts ...grpc.CallOption) (*CleanResponse, error)
}

type proxyControllerClient struct {
	cc *grpc.ClientConn
}

func NewProxyControllerClient(cc *grpc.ClientConn) ProxyControllerClient {
	return &proxyControllerClient{cc}
}

func (c *proxyControllerClient) CleanUidCache(ctx context.Context, in *CleanRequest, opts ...grpc.CallOption) (*CleanResponse, error) {
	out := new(CleanResponse)
	err := c.cc.Invoke(ctx, "/ProxyController/CleanUidCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProxyControllerServer is the server API for ProxyController service.
type ProxyControllerServer interface {
	CleanUidCache(context.Context, *CleanRequest) (*CleanResponse, error)
}

func RegisterProxyControllerServer(s *grpc.Server, srv ProxyControllerServer) {
	s.RegisterService(&_ProxyController_serviceDesc, srv)
}

func _ProxyController_CleanUidCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CleanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyControllerServer).CleanUidCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProxyController/CleanUidCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyControllerServer).CleanUidCache(ctx, req.(*CleanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProxyController_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ProxyController",
	HandlerType: (*ProxyControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CleanUidCache",
			Handler:    _ProxyController_CleanUidCache_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto.proto",
}

// ServerControllerClient is the client API for ServerController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServerControllerClient interface {
	UidLogout(ctx context.Context, in *UidLogoutRequest, opts ...grpc.CallOption) (*UidLogoutResponse, error)
}

type serverControllerClient struct {
	cc *grpc.ClientConn
}

func NewServerControllerClient(cc *grpc.ClientConn) ServerControllerClient {
	return &serverControllerClient{cc}
}

func (c *serverControllerClient) UidLogout(ctx context.Context, in *UidLogoutRequest, opts ...grpc.CallOption) (*UidLogoutResponse, error) {
	out := new(UidLogoutResponse)
	err := c.cc.Invoke(ctx, "/ServerController/UidLogout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServerControllerServer is the server API for ServerController service.
type ServerControllerServer interface {
	UidLogout(context.Context, *UidLogoutRequest) (*UidLogoutResponse, error)
}

func RegisterServerControllerServer(s *grpc.Server, srv ServerControllerServer) {
	s.RegisterService(&_ServerController_serviceDesc, srv)
}

func _ServerController_UidLogout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UidLogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerControllerServer).UidLogout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ServerController/UidLogout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerControllerServer).UidLogout(ctx, req.(*UidLogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServerController_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ServerController",
	HandlerType: (*ServerControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UidLogout",
			Handler:    _ServerController_UidLogout_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto.proto",
}

// CertServiceClient is the client API for CertService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CertServiceClient interface {
	Cert(ctx context.Context, in *CertRequest, opts ...grpc.CallOption) (*CertEntry, error)
}

type certServiceClient struct {
	cc *grpc.ClientConn
}

func NewCertServiceClient(cc *grpc.ClientConn) CertServiceClient {
	return &certServiceClient{cc}
}

func (c *certServiceClient) Cert(ctx context.Context, in *CertRequest, opts ...grpc.CallOption) (*CertEntry, error) {
	out := new(CertEntry)
	err := c.cc.Invoke(ctx, "/CertService/Cert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CertServiceServer is the server API for CertService service.
type CertServiceServer interface {
	Cert(context.Context, *CertRequest) (*CertEntry, error)
}

func RegisterCertServiceServer(s *grpc.Server, srv CertServiceServer) {
	s.RegisterService(&_CertService_serviceDesc, srv)
}

func _CertService_Cert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertServiceServer).Cert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CertService/Cert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertServiceServer).Cert(ctx, req.(*CertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CertService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CertService",
	HandlerType: (*CertServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Cert",
			Handler:    _CertService_Cert_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto.proto",
}

// DashServiceClient is the client API for DashService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DashServiceClient interface {
	ClientUid(ctx context.Context, in *CommonQueryRequest, opts ...grpc.CallOption) (*CommonQueryResponse, error)
	UidState(ctx context.Context, in *CommonQueryRequest, opts ...grpc.CallOption) (*CommonQueryResponse, error)
	UidEndpoint(ctx context.Context, in *CommonQueryRequest, opts ...grpc.CallOption) (*CommonQueryResponse, error)
	UidClients(ctx context.Context, in *CommonQueryRequest, opts ...grpc.CallOption) (*CommonQueryListResponse, error)
}

type dashServiceClient struct {
	cc *grpc.ClientConn
}

func NewDashServiceClient(cc *grpc.ClientConn) DashServiceClient {
	return &dashServiceClient{cc}
}

func (c *dashServiceClient) ClientUid(ctx context.Context, in *CommonQueryRequest, opts ...grpc.CallOption) (*CommonQueryResponse, error) {
	out := new(CommonQueryResponse)
	err := c.cc.Invoke(ctx, "/DashService/ClientUid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashServiceClient) UidState(ctx context.Context, in *CommonQueryRequest, opts ...grpc.CallOption) (*CommonQueryResponse, error) {
	out := new(CommonQueryResponse)
	err := c.cc.Invoke(ctx, "/DashService/UidState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashServiceClient) UidEndpoint(ctx context.Context, in *CommonQueryRequest, opts ...grpc.CallOption) (*CommonQueryResponse, error) {
	out := new(CommonQueryResponse)
	err := c.cc.Invoke(ctx, "/DashService/UidEndpoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashServiceClient) UidClients(ctx context.Context, in *CommonQueryRequest, opts ...grpc.CallOption) (*CommonQueryListResponse, error) {
	out := new(CommonQueryListResponse)
	err := c.cc.Invoke(ctx, "/DashService/UidClients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DashServiceServer is the server API for DashService service.
type DashServiceServer interface {
	ClientUid(context.Context, *CommonQueryRequest) (*CommonQueryResponse, error)
	UidState(context.Context, *CommonQueryRequest) (*CommonQueryResponse, error)
	UidEndpoint(context.Context, *CommonQueryRequest) (*CommonQueryResponse, error)
	UidClients(context.Context, *CommonQueryRequest) (*CommonQueryListResponse, error)
}

func RegisterDashServiceServer(s *grpc.Server, srv DashServiceServer) {
	s.RegisterService(&_DashService_serviceDesc, srv)
}

func _DashService_ClientUid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashServiceServer).ClientUid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DashService/ClientUid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashServiceServer).ClientUid(ctx, req.(*CommonQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashService_UidState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashServiceServer).UidState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DashService/UidState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashServiceServer).UidState(ctx, req.(*CommonQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashService_UidEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashServiceServer).UidEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DashService/UidEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashServiceServer).UidEndpoint(ctx, req.(*CommonQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashService_UidClients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashServiceServer).UidClients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DashService/UidClients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashServiceServer).UidClients(ctx, req.(*CommonQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DashService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DashService",
	HandlerType: (*DashServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ClientUid",
			Handler:    _DashService_ClientUid_Handler,
		},
		{
			MethodName: "UidState",
			Handler:    _DashService_UidState_Handler,
		},
		{
			MethodName: "UidEndpoint",
			Handler:    _DashService_UidEndpoint_Handler,
		},
		{
			MethodName: "UidClients",
			Handler:    _DashService_UidClients_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto.proto",
}

func init() { proto.RegisterFile("proto.proto", fileDescriptor_2fcc84b9998d60d8) }

var fileDescriptor_2fcc84b9998d60d8 = []byte{
	// 595 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0x5f, 0x6f, 0xda, 0x3e,
	0x14, 0x55, 0x4a, 0xcb, 0x0f, 0x2e, 0x24, 0x50, 0xb7, 0xfa, 0x2d, 0xca, 0x13, 0xb2, 0xb6, 0x6a,
	0x3c, 0xcc, 0x93, 0xd2, 0xfd, 0x93, 0xfa, 0x54, 0x65, 0x9d, 0x34, 0xa9, 0x93, 0x3a, 0x50, 0xf6,
	0x9e, 0x61, 0x8b, 0x5a, 0x4b, 0x6d, 0x70, 0xcc, 0x36, 0xbe, 0xd9, 0xbe, 0xd7, 0xbe, 0xc0, 0x14,
	0x13, 0x43, 0x02, 0x44, 0x2b, 0x7b, 0x41, 0x3e, 0x97, 0xe3, 0x7b, 0xcf, 0xbd, 0x3e, 0x17, 0xa0,
	0x33, 0x53, 0x52, 0x4b, 0x62, 0x3e, 0x31, 0x07, 0x37, 0x9e, 0xa5, 0x32, 0xa1, 0x23, 0x36, 0x5f,
	0xb0, 0x4c, 0xa3, 0x3e, 0x34, 0x16, 0x9c, 0xfa, 0xce, 0xc0, 0x79, 0xde, 0x1e, 0xe5, 0x47, 0xf4,
	0x3f, 0x34, 0x15, 0x9b, 0x48, 0x45, 0xfd, 0x23, 0x13, 0x2c, 0x10, 0x3a, 0x87, 0x13, 0x2d, 0xbf,
	0x31, 0xe1, 0x37, 0x4c, 0x78, 0x05, 0x90, 0x0f, 0xff, 0x4d, 0x52, 0x7e, 0x4d, 0xa9, 0xf2, 0x8f,
	0x4d, 0xdc, 0x42, 0x7c, 0x07, 0x9e, 0x2d, 0x95, 0xcd, 0xa4, 0xc8, 0x18, 0x0a, 0xa0, 0xc5, 0x94,
	0x92, 0xea, 0x53, 0x36, 0x2d, 0x0a, 0xae, 0x31, 0xc2, 0xd0, 0x55, 0x05, 0x2f, 0x92, 0x94, 0x99,
	0xda, 0x27, 0xa3, 0x4a, 0x0c, 0x2f, 0xc0, 0x1d, 0xb3, 0x44, 0x4d, 0xee, 0xeb, 0xc5, 0x63, 0xe8,
	0x66, 0x86, 0x32, 0xd6, 0x8a, 0x8b, 0x69, 0xd1, 0x42, 0x25, 0xf6, 0x2f, 0x8d, 0xd8, 0xb2, 0x9b,
	0x46, 0xac, 0x30, 0xdf, 0x19, 0x34, 0xf2, 0x46, 0x2c, 0x7e, 0x54, 0x23, 0x5f, 0xa0, 0x7b, 0x2b,
	0xa7, 0x5c, 0xd4, 0xf7, 0x11, 0x40, 0x6b, 0x96, 0x64, 0xd9, 0x8f, 0xcd, 0x33, 0xac, 0x71, 0x59,
	0x69, 0xa3, 0xaa, 0xf4, 0x23, 0xb8, 0x45, 0xde, 0x1a, 0x31, 0xce, 0xae, 0x98, 0xcd, 0x38, 0x8e,
	0x4a, 0xe3, 0xc0, 0x57, 0x26, 0x95, 0x5c, 0xe8, 0x7a, 0x8d, 0x25, 0x1d, 0x47, 0x55, 0x1d, 0xaf,
	0xc0, 0xb3, 0x97, 0x1f, 0x2f, 0x04, 0x0f, 0xa0, 0x1b, 0xa5, 0x2c, 0xa9, 0x9f, 0x0a, 0xbe, 0x04,
	0xb7, 0x60, 0x1c, 0x90, 0xf6, 0x29, 0xf4, 0x63, 0x4e, 0xff, 0xd2, 0x0c, 0x7e, 0x0b, 0xa7, 0x25,
	0xd6, 0x01, 0xe9, 0x5d, 0xe8, 0x44, 0x4c, 0xd9, 0xcc, 0xf8, 0x19, 0xb4, 0x73, 0x78, 0x23, 0xb4,
	0x5a, 0x9a, 0x09, 0x49, 0xa1, 0x99, 0xd0, 0x45, 0x29, 0x0b, 0xf1, 0x05, 0xa0, 0x48, 0x3e, 0x3c,
	0x48, 0xf1, 0x79, 0xc1, 0xd4, 0xb2, 0x24, 0x4b, 0xb1, 0xb9, 0x95, 0xa5, 0xd8, 0x1c, 0x0f, 0xe1,
	0xac, 0xc2, 0x2b, 0x84, 0x21, 0x38, 0xce, 0x45, 0x14, 0x4c, 0x73, 0xc6, 0x2f, 0xe0, 0x49, 0x89,
	0x7a, 0xcb, 0x33, 0xbd, 0x87, 0xde, 0xb0, 0xf4, 0xf0, 0x97, 0x63, 0xb7, 0x69, 0xcc, 0xd4, 0x77,
	0x3e, 0x61, 0x68, 0x08, 0xcd, 0x55, 0x00, 0x79, 0xa4, 0xb2, 0x67, 0x41, 0x8f, 0x6c, 0x2d, 0xc0,
	0x10, 0x9a, 0xab, 0xdd, 0x46, 0x1e, 0xa9, 0xfc, 0x9e, 0x04, 0x3d, 0xb2, 0xb5, 0xf4, 0x17, 0x70,
	0x62, 0x3c, 0x89, 0x5c, 0x52, 0xf6, 0x7c, 0xe0, 0x91, 0xaa, 0x55, 0x87, 0xd0, 0x5c, 0x4d, 0x1f,
	0x99, 0x6f, 0x36, 0x8f, 0x15, 0xf4, 0x48, 0xf5, 0x59, 0xc2, 0x6b, 0xe8, 0xdd, 0x29, 0xf9, 0x73,
	0x19, 0x49, 0xa1, 0x95, 0x4c, 0x53, 0xa6, 0x10, 0x29, 0x9c, 0x11, 0x73, 0x1a, 0x25, 0x93, 0x7b,
	0x86, 0x5c, 0x52, 0xf6, 0x52, 0xe0, 0x91, 0x8a, 0x71, 0xc2, 0x0f, 0xd0, 0xcf, 0xdb, 0x66, 0xaa,
	0x94, 0x23, 0x84, 0xf6, 0xda, 0x02, 0xe8, 0x94, 0x6c, 0x9b, 0x26, 0x40, 0x64, 0xc7, 0x21, 0xe1,
	0xcb, 0xd5, 0xeb, 0xdb, 0x11, 0x0e, 0xe0, 0x38, 0x87, 0xa8, 0x4b, 0x4a, 0x9e, 0x08, 0x80, 0xac,
	0x2d, 0x11, 0xfe, 0x76, 0xa0, 0xf3, 0x3e, 0xc9, 0xd6, 0x43, 0x7f, 0x03, 0xed, 0x28, 0xe5, 0x4c,
	0xe8, 0x98, 0x53, 0x74, 0x46, 0x76, 0x4d, 0x11, 0x9c, 0x93, 0x7d, 0x0e, 0x78, 0x0d, 0xad, 0x98,
	0xd3, 0xb1, 0x4e, 0x34, 0x3b, 0xe4, 0xda, 0x3b, 0xe8, 0xc4, 0x9c, 0xde, 0x08, 0x3a, 0x93, 0x5c,
	0xe8, 0x43, 0x6e, 0x5e, 0x01, 0xe4, 0xc3, 0x35, 0x5a, 0xb3, 0xfd, 0x17, 0x7d, 0x52, 0x63, 0xc0,
	0xaf, 0x4d, 0xf3, 0xef, 0x73, 0xf9, 0x27, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x0f, 0xaa, 0x9b, 0x8c,
	0x06, 0x00, 0x00,
}
